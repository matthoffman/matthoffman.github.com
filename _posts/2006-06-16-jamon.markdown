---
title: Another library
layout: post 
summary: where I talk briefly about JAMon, a performance monitoring and aggregation library
---
I've been teased that my current project has more external libraries than it does actual lines of code.  Now, I'm not convinced that's a bad thing â€“ I've said before that the hardest thing about leaving Java for some other language would be giving up all of the 3rd-party libraries and projects that do 90% of your work for you. 

Today's is JAMon, a small library with a really simple purpose: keep track of performance statistics. I've written static classes or singletons that keep track of min, max and average times for various things on several projects; this just keeps me from having to write it again. Not saving a ton of time, but saving some. And [here](http://iremia.univ-reunion.fr/intranet/wiki/Wiki.jsp?page=SpringJamon) is a simple step-by-step for integrating it into Spring as an interceptor. There are several discussions out there for how to use JAMon with Spring, and whether Spring's built-in JAMon interceptor (is there anything Spring *doesn't* have built in?) should use logging semantics to activate it, but the one above is simply the XML to cut and paste into Appfuse's Spring config, which is all I really want. I understand what it does, it's just saving me the five minutes of thinking about it.  Which is what I'm after.  It's just a beautiful feeling when you want something done, no matter how small, and find that it's already been done for you.  Like realizing you want another cup of coffee and finding a steaming mug already on your desk.

With that said, I'm going to go make some coffee now... 
